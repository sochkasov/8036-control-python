#!/usr/bin/pythonimport serialimport timeimport logginglogging.basicConfig(level=logging.DEBUG, filename="./log.log")logging.debug('A debug message!')ser = serial.Serial()ser.port = "/dev/ttyS0"ser.baudrate = 9600ser.bytesize = 8  #number of bits per bytesser.stopbits = 2  #number of stop bitsser.timeout = 1  #non-block readser.parity = serial.PARITY_NONE  #set parity check: no parityser.xonxoff = serial.XOFF  #disable software flow controlser.rtscts = False  #disable hardware (RTS/CTS) flow controlser.dsrdtr = False  #disable hardware (DSR/DTR) flow controlser.writeTimeout = 0  #timeout for writetry:    ser.open()except Exception, e:    print "error open serial port: " + str(e)    exit()if ser.isOpen():    try:        ser.flushInput() #flush input buffer, discarding all its contents        ser.flushOutput() #flush output buffer, aborting current output.	# --- V ---        print 'Sending \"V\" command to MN8036'        ser.write("V")        ver = ser.read(1)        ver_str_len = ser.read(1)        ver_str = ser.read(ord(ver_str_len))        print("int symbol >> " + ver)	str_txt = str(ord(ver_str_len))        print("len = " + str_txt)        print("Ver(text) >> " + ver_str)        ser.close()        #time.sleep(0.5)#        numOfLines = 0#        while True:            #response = ser.readline()#            response = ser.read(1)#            if len(response) > 0:#                print(">> " + response.encode('hex'))#                numOfLines = numOfLines + 1#                if (numOfLines >= 10):#                    ser.close()#                    break #           ser.close()#            break    except Exception, e1:        print "error communicating...: " + str(e1)#ser.close()else:    print "cannot open serial port "